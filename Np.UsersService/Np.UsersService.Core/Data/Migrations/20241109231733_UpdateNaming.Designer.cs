// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Np.UsersService.Core.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Np.UsersService.Core.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241109231733_UpdateNaming")]
    partial class UpdateNaming
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Np.UsersService.Core.Messaging.Outbox.Models.OutboxEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("RefreshTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("refresh_time");

                    b.HasKey("Id")
                        .HasName("pk_outbox_entries");

                    b.HasIndex("RefreshTime")
                        .HasDatabaseName("ix_outbox_entries_refresh_time");

                    b.ToTable("outbox_entries", (string)null);
                });

            modelBuilder.Entity("Np.UsersService.Core.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("IdentityId")
                        .HasColumnType("text")
                        .HasColumnName("identity_id");

                    b.Property<bool>("IsSyncrhonizedWithIdentity")
                        .HasColumnType("boolean")
                        .HasColumnName("is_syncrhonized_with_identity");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.HasIndex("IdentityId")
                        .HasDatabaseName("ix_users_identity_id");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("ix_users_username");

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
