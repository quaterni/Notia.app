services:
  notes:
    restart: always
    build: 
      context: ..\Np.NotesService\
      dockerfile: ..\Np.NotesService\Np.NotesService.Api\Dockerfile
    ports:
      - "10080:8080"
    depends_on:
      notes.db:
        condition: service_started
      messagebus:
        condition: service_healthy
  notes.db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=notes_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./compose-data/notes_db:/var/lib/postgresql/data
    ports:
      - "5433:5432"
  messagebus:
    image: rabbitmq:4.0-management
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 15s
      retries: 3
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - ./compose-data/rabbitmq:/var/lib/rabbitmq
  relations:
    restart: always
    build: 
      context: ..\Np.RelationsService\
      dockerfile: ..\Np.RelationsService\Np.RelationsService.Api\Dockerfile     
    ports:
      - "11080:8080"
      - "11081:8081"
    depends_on:
      relations.db:
        condition: service_started
      messagebus:
        condition: service_healthy
  relations.db:
    image: postgres:latest
    container_name: relations_db
    environment:
      - POSTGRES_DB=relations_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./compose-data/relations_db:/var/lib/postgresql/data
    ports:
      - "5434:5432"
  users:
    restart: always
    build: 
      context: ..\Np.UsersService\Np.UsersService.Core\
      dockerfile: .\Dockerfile
    ports:
      - "12080:8080"
      - "12081:8081"
    depends_on:
      users.db:
        condition: service_started
      users.identity:
        condition: service_started
      messagebus:
        condition: service_healthy
  users.db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=users
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./compose-data/users_db:/var/lib/postgresql/data
    ports:
      - "5435:5432"
  users.identity:
    image: quay.io/keycloak/keycloak:latest
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://users.identity.db:5432/keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
      - KC_HOSTNAME=http://users.identity:8080
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: ["start-dev"]
    ports:
      - "19080:8080"
    depends_on:
      - users.identity.db
  users.identity.db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./compose-data/users_identity_db:/var/lib/postgresql/data
    ports:
      - "5436:5432"